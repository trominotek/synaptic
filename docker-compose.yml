services:
  agents:
    image: synaptic-agents:${VERSION:-2025-08-22}
    container_name: synaptic-agents
    ports:
      - "8080:80"
    depends_on:
      - mcp-server
      - doc-db
    environment:
      - NODE_ENV=production
      - PORT=80
    networks:
      - synaptic-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  doc-db:
    image: synaptic-doc-db:${VERSION:-2025-08-22}
    container_name: synaptic-doc-db
    ports:
      - "8005:8005"
    environment:
      - FLASK_ENV=production
      - CHROMADB_PATH=/app/chromadb_data
      - CORS_ORIGINS=http://localhost:8080,http://agents
      - MCP_SERVER_PATH=/app/mcp-server
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ai_application
      - DB_HOST=postgres
      - DB_NAME=ai_application
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      # Mount host ChromaDB data directory to preserve existing data
      - ../doc-db:/app/chromadb_data:rw
      # Mount MCP server for API key management
      - ../a-tier-mcp-server:/app/mcp-server:ro
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - synaptic-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8005/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  mcp-server:
    image: synaptic-mcp-server:${VERSION:-2025-08-22}
    container_name: synaptic-mcp-server
    ports:
      - "8090:8000"
    environment:
      - FLASK_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/ai_application
      - DB_HOST=postgres
      - DB_NAME=ai_application
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_PORT=5432
      - DB_SCHEMA=bank
      - OCR_SERVICE_URL=http://ocr:5000/ocr
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
    volumes:
      - ../a-tier-mcp-server/logs:/app/logs
      - ../a-tier-mcp-server/chroma_db:/app/chroma_db
    depends_on:
      postgres:
        condition: service_healthy
      ocr:
        condition: service_started
    networks:
      - synaptic-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  ocr:
    image: synaptic-ocr:${VERSION:-2025-08-22}
    container_name: synaptic-ocr
    ports:
      - "5002:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - OCR_PORT=5000
    volumes:
      - ../ocr/test-images:/app/test-images:ro
    networks:
      - synaptic-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000/hello || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:16-alpine
    container_name: synaptic-postgres
    environment:
      - POSTGRES_DB=ai_application
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5435:5432"
    networks:
      - synaptic-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local

networks:
  synaptic-network:
    driver: bridge
    name: synaptic-network